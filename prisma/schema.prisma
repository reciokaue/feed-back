generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator erd {
  provider                  = "prisma-erd-generator"
  output                    = "ERD.svg"
  theme                     = "forest"
  includeRelationFromFields = true
}

model Form {
  id         String     @id @default(uuid())
  name       String
  about      String?
  IsCustom   Boolean    @default(true) // Define se é padrão ou personalizada
  userId     String // Chave estrangeira para o User
  user       User       @relation(fields: [userId], references: [id])
  topic      String // Chave estrangeira para o Topic
  topicModel Topic      @relation(fields: [topic], references: [name])
  questions  Question[]
  answers    Answer[]
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  forms    Form[] // Um usuário pode ter vários formulários
}

model Question {
  id           String       @id @default(uuid())
  text         String
  formId       String
  IsCustom     Boolean      @default(true) // Define se é padrão ou personalizada
  form         Form         @relation(fields: [formId], references: [id])
  type         String // Pode ser 'text', 'number', 'image', etc.
  questionType QuestionType @relation(fields: [type], references: [name])
  topic        String // Chave estrangeira para o Topic
  topicModel   Topic        @relation(fields: [topic], references: [name])
  options      Option[]
  Answer       Answer[]
}

model Option {
  id         String   @id @default(uuid())
  text       String
  value      Int // 1 to 10
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  Answer     Answer[]
}

model Topic {
  name     String     @id @unique
  Form     Form[]
  Question Question[]
}

model QuestionType {
  name     String     @id @unique
  Question Question[]
}

model Answer {
  id         String   @id @default(uuid())
  value      String // Text or ID of the option
  questionId String
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id])
  formId     String
  form       Form     @relation(fields: [formId], references: [id])
  optionId   String?
  option     Option?  @relation(fields: [optionId], references: [id])
}
